<ref *2> IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: null,
    ended: false,
    endEmitted: false,
    reading: false,
    constructed: true,
    sync: true,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    errorEmitted: false,
    emitClose: true,
    autoDestroy: true,
    destroyed: false,
    errored: null,
    closed: false,
    closeEmitted: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: true,
    dataEmitted: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: null
  },
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: {
    encrypted: true,
    readable: false,
    remoteAddress: '127.0.0.1',
    address: [Function: address],
    end: {},
    destroy: {}
  },
  httpVersionMajor: '1',
  httpVersionMinor: '1',
  httpVersion: '1.1',
  complete: true,
  rawHeaders: [],
  rawTrailers: [],
  aborted: false,
  upgrade: null,
  url: '/',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: {
    encrypted: true,
    readable: false,
    remoteAddress: '127.0.0.1',
    address: [Function: address],
    end: {},
    destroy: {}
  },
  _consuming: false,
  _dumped: false,
  ip: '127.0.0.1',
  body: <Buffer >,
  _read: [Function (anonymous)],
  requestContext: {
    accountId: 'offlineContext_accountId',
    apiId: 'offlineContext_apiId',
    authorizer: { jwt: [Object] },
    domainName: 'offlineContext_domainName',
    domainPrefix: 'offlineContext_domainPrefix',
    http: {
      method: 'GET',
      path: '/',
      protocol: 'HTTP/1.1',
      sourceIp: '127.0.0.1',
      userAgent: 'Mozilla/5.0 (Linux; Android 10; M2004J19C) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Mobile Safari/537.36'
    },
    operationName: undefined,
    requestId: 'offlineContext_resourceId',
    routeKey: '$default',
    stage: '$default',
    time: '24/Jul/2022:11:57:01 -0500',
    timeEpoch: 1658681821099
  },
  apiGateway: {
    event: {
      body: '',
      cookies: [],
      headers: [Object],
      isBase64Encoded: false,
      pathParameters: [Object],
      queryStringParameters: null,
      rawPath: '/',
      rawQueryString: '',
      requestContext: [Object],
      routeKey: '$default',
      stageVariables: null,
      version: '2.0'
    },
    context: {
      awsRequestId: 'd0371e58-f267-4c14-8cf6-6f08d0c434e8',
      callbackWaitsForEmptyEventLoop: true,
      clientContext: null,
      functionName: 'ms-core-dev-api',
      functionVersion: '$LATEST',
      identity: undefined,
      invokedFunctionArn: 'offline_invokedFunctionArn_for_ms-core-dev-api',
      logGroupName: 'offline_logGroupName_for_ms-core-dev-api',
      logStreamName: 'offline_logStreamName_for_ms-core-dev-api',
      memoryLimitInMB: '1024',
      done: [Function: done],
      fail: [Function: fail],
      getRemainingTimeInMillis: [Function: getRemainingTimeInMillis],
      succeed: [Function: succeed]
    }
  },
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/',
    path: '/',
    href: '/',
    _raw: '/'
  },
  params: {},
  query: {},
  res: <ref *1> ServerResponse {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: {
      _writableState: {},
      writable: true,
      on: {},
      removeListener: {},
      destroy: {},
      cork: {},
      uncork: {},
      write: [Function: write],
      _httpMessage: [Circular *1]
    },
    _header: '',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    req: [Circular *2],
    _sent100: false,
    _expect_continue: false,
    locals: [Object: null prototype] {},
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] },
    [Symbol()]: [],
    [Symbol()]: {}
  },
  route: Route { path: '/', stack: [ [Layer] ], methods: { get: true } },
  [Symbol(kCapture)]: false,
  [Symbol(kHeaders)]: {
    cookie: '',
    host: '06a0-177-53-153-162.sa.ngrok.io',
    'user-agent': 'Mozilla/5.0 (Linux; Android 10; M2004J19C) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Mobile Safari/537.36',
    accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
    'accept-encoding': 'gzip, deflate, br',
    'accept-language': 'es-ES,es;q=0.9',
    'sec-ch-ua': '".Not/A)Brand";v="99", "Google Chrome";v="103", "Chromium";v="103"',
    'sec-ch-ua-mobile': '?1',
    'sec-ch-ua-platform': '"Android"',
    'sec-fetch-dest': 'document',
    'sec-fetch-mode': 'navigate',
    'sec-fetch-site': 'none',
    'sec-fetch-user': '?1',
    'upgrade-insecure-requests': '1',
    'x-forwarded-for': '177.53.153.162',
    'x-forwarded-proto': 'https',
    'x-request-id': 'offlineContext_resourceId',
    'content-length': 0
  },
  [Symbol(kHeadersCount)]: 0,
  [Symbol(kTrailers)]: null,
  [Symbol(kTrailersCount)]: 0
}